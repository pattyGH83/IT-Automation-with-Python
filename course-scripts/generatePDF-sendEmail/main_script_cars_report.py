import json
import locale
import sys
import reports
import emails

def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums. Returns a list of lines that summarize the information."""
  max_revenue = {"revenue": 0}
  max_sales = {'total_sales':0, 'car_model':''}
  pop_car_year = {}

  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56

    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      # add a new key:value as "revenue" and calculated item_revenue
      item["revenue"] = item_revenue
      # we set 'max_revenue' as the 'item' dictionary data to use in the summary section below
      max_revenue = item

    # TODO: also handle max sales
    if item['total_sales'] > max_sales['total_sales']:
      max_sales['total_sales'] = item['total_sales']
      max_sales['car_model'] = item['car']['car_model']

    # TODO: also handle most popular car_year
    # part of iterating thorugh 'data', create a new entry in the pop_car_year dictionary with key = year and value = revenue (existing value for the key, or 0 if DNE, + item['total_sales']
    pop_car_year[item['car']['car_year']] = pop_car_year.get(item['car']['car_year'], 0) + item['total_sales']

  pop_car_yr_sorted = sorted(pop_car_year.items(), key=lambda a: a[1], reverse=True)

  #TODO: 'The {car model} had the most sales: {total sales}' and 'The most popular year was {year} with {total sales in that year} sales.' 
  summary = ["The {} generated the most revenue: ${}".format(format_car(max_revenue["car"]), max_revenue["revenue"]),
             "The {} had the most sales: {}".format(max_sales['car_model'], max_sales['total_sales']),
             "The most popular year was {} with {} sales.".format(pop_car_yr_sorted[0][0], pop_car_yr_sorted[0][1])]
  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("~/car_sales.json")
  summary = process_data(data)
  print(summary)

  # TODO: turn this into a PDF report using the pre-made reports script
  car_table = cars_dict_to_table(data)
  reports.generate('/tmp/cars.pdf', 'Monthly Car Sales Summary', '<br/>'.join(summary), car_table)

  # TODO: send the PDF report as an email attachment
  email_message = emails.generate('sender@example.com', 'receiver@example.com', 'Sales summary for last month', '\n'.join(summary), '/tmp/cars.pdf')
  emails.send(email_message)


if __name__ == "__main__":
  main(sys.argv)
